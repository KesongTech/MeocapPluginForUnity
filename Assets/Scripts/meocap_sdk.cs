// Automatically generated by Interoptopus.

#pragma warning disable 0105
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Meocap;
#pragma warning restore 0105

namespace Meocap
{
    public static partial class MeocapSDK
    {
        public const string NativeLib = "meocap_sdk";

        static MeocapSDK()
        {
        }


        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_connect_server_char")]
        public static extern ulong meocap_connect_server_char(byte ip_a, byte ip_b, byte ip_c, byte ip_d, ushort port);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_connect_server_cstr")]
        public static extern ulong meocap_connect_server_cstr(ref sbyte endpoint);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_connect_command_server_char")]
        public static extern ulong meocap_connect_command_server_char(byte ip_a, byte ip_b, byte ip_c, byte ip_d, ushort port);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_connect_command_server_cstr")]
        public static extern ulong meocap_connect_command_server_cstr(ref sbyte endpoint);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_command_set_skel")]
        public static extern int meocap_command_set_skel(ulong socket, ref SkelBase skel);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_recv_frame")]
        public static extern int meocap_recv_frame(ulong socket, out MeoFrame frame_buf);

        [DllImport(NativeLib, CallingConvention = CallingConvention.Cdecl, EntryPoint = "meocap_clean_up")]
        public static extern int meocap_clean_up(ulong socket);

    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct Joint
    {
        public double pos0;
        public double pos1;
        public double pos2;
        public double glb_rot0;
        public double glb_rot1;
        public double glb_rot2;
        public double glb_rot3;
        public double loc_rot0;
        public double loc_rot1;
        public double loc_rot2;
        public double loc_rot3;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct MeoFrame
    {
        public int frame_id;
        public double translation0;
        public double translation1;
        public double translation2;
        public Joint joints0;
        public Joint joints1;
        public Joint joints2;
        public Joint joints3;
        public Joint joints4;
        public Joint joints5;
        public Joint joints6;
        public Joint joints7;
        public Joint joints8;
        public Joint joints9;
        public Joint joints10;
        public Joint joints11;
        public Joint joints12;
        public Joint joints13;
        public Joint joints14;
        public Joint joints15;
        public Joint joints16;
        public Joint joints17;
        public Joint joints18;
        public Joint joints19;
        public Joint joints20;
        public Joint joints21;
        public Joint joints22;
        public Joint joints23;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct SkelBase
    {
        public SkelJoint bones0;
        public SkelJoint bones1;
        public SkelJoint bones2;
        public SkelJoint bones3;
        public SkelJoint bones4;
        public SkelJoint bones5;
        public SkelJoint bones6;
        public SkelJoint bones7;
        public SkelJoint bones8;
        public SkelJoint bones9;
        public SkelJoint bones10;
        public SkelJoint bones11;
        public SkelJoint bones12;
        public SkelJoint bones13;
        public SkelJoint bones14;
        public SkelJoint bones15;
        public SkelJoint bones16;
        public SkelJoint bones17;
        public SkelJoint bones18;
        public SkelJoint bones19;
        public SkelJoint bones20;
        public SkelJoint bones21;
        public SkelJoint bones22;
        public SkelJoint bones23;
        public double floor_y;
    }

    [Serializable]
    [StructLayout(LayoutKind.Sequential)]
    public partial struct SkelJoint
    {
        public double pos0;
        public double pos1;
        public double pos2;
    }



    public class InteropException<T> : Exception
    {
        public T Error { get; private set; }

        public InteropException(T error): base($"Something went wrong: {error}")
        {
            Error = error;
        }
    }

}
